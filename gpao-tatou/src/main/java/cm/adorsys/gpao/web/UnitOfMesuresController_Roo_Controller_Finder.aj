// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cm.adorsys.gpao.web;

import cm.adorsys.gpao.model.UdmGroup;
import cm.adorsys.gpao.model.UnitOfMesures;
import cm.adorsys.gpao.web.UnitOfMesuresController;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

privileged aspect UnitOfMesuresController_Roo_Controller_Finder {
    
    @RequestMapping(params = { "find=ByNameLikeAndUnitGroup", "form" }, method = RequestMethod.GET)
    public String UnitOfMesuresController.findUnitOfMesuresesByNameLikeAndUnitGroupForm(Model uiModel) {
        uiModel.addAttribute("udmgroups", UdmGroup.findAllUdmGroups());
        return "unitofmesureses/findUnitOfMesuresesByNameLikeAndUnitGroup";
    }
    
    @RequestMapping(params = "find=ByNameLikeAndUnitGroup", method = RequestMethod.GET)
    public String UnitOfMesuresController.findUnitOfMesuresesByNameLikeAndUnitGroup(@RequestParam("name") String name, @RequestParam("unitGroup") UdmGroup unitGroup, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, @RequestParam(value = "sortFieldName", required = false) String sortFieldName, @RequestParam(value = "sortOrder", required = false) String sortOrder, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("unitofmesureses", UnitOfMesures.findUnitOfMesuresesByNameLikeAndUnitGroup(name, unitGroup, sortFieldName, sortOrder).setFirstResult(firstResult).setMaxResults(sizeNo).getResultList());
            float nrOfPages = (float) UnitOfMesures.countFindUnitOfMesuresesByNameLikeAndUnitGroup(name, unitGroup) / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("unitofmesureses", UnitOfMesures.findUnitOfMesuresesByNameLikeAndUnitGroup(name, unitGroup, sortFieldName, sortOrder).getResultList());
        }
        return "unitofmesureses/list";
    }
    
}
