// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cm.adorsys.gpao.model;

import cm.adorsys.gpao.model.ProductFamily;
import java.util.List;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ProductFamily_Roo_Jpa_ActiveRecord {
    
    public static final List<String> ProductFamily.fieldNames4OrderClauseFilter = java.util.Arrays.asList("name", "description", "productSubFamily");
    
    public static long ProductFamily.countProductFamilys() {
        return entityManager().createQuery("SELECT COUNT(o) FROM ProductFamily o", Long.class).getSingleResult();
    }
    
    public static List<ProductFamily> ProductFamily.findAllProductFamilys() {
        return entityManager().createQuery("SELECT o FROM ProductFamily o", ProductFamily.class).getResultList();
    }
    
    public static List<ProductFamily> ProductFamily.findAllProductFamilys(String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM ProductFamily o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, ProductFamily.class).getResultList();
    }
    
    public static ProductFamily ProductFamily.findProductFamily(Long id) {
        if (id == null) return null;
        return entityManager().find(ProductFamily.class, id);
    }
    
    public static List<ProductFamily> ProductFamily.findProductFamilyEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM ProductFamily o", ProductFamily.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    public static List<ProductFamily> ProductFamily.findProductFamilyEntries(int firstResult, int maxResults, String sortFieldName, String sortOrder) {
        String jpaQuery = "SELECT o FROM ProductFamily o";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        return entityManager().createQuery(jpaQuery, ProductFamily.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public ProductFamily ProductFamily.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        ProductFamily merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
